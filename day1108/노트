IP주소 : 192.168.10.68

 데이터베이스 명령어
 1)DCL(control): 데이터 제어어  -> 사용자 계정을 생성, 권한 부여, 권한 제거
 ->system이 사용할 수 있는 명령어
 ->Create use~~~~/ grant~~~~/revoke~~~
 
 2)DDL(defination):테이블 정의어 -> 리소스(table,view,index)을 생성, 제거
 ->Create table/ alter table
 
 3)DML(Manuflation):데이터 조작어 -> 레코드를 추가, 수정, 검색, 삭제
 
 **system계정에 접속해서 사용자 계정을 생성함 
 
 ** 서점 관리에 필요한 테이블들을 생성함
 도서 : 도서번호, 도서명, 출판사명, 가격
 고객 : 고객번호, 고객이름, 주소, 전화번호
 주문 : 주문번호, 도서번호, 고객번호, 구매가격 , 구매일  <관계형 데이터 베이스>
 
 create table book(
 	bookid number primary key,
 	bookname varchar2(50),
 	publisher varchar2(50),
 	price number, 
 ); 
 
 create table customer(
 	custid number primary key,
 	name varchar2(20),
 	address varchar2(50),
 	phone varchar2(20) 
 ); 
 

 create table orders (
 	orderid number primary key;
 	custid number references customer(custid),
 	bookid number references book(bookid),
 	saleprice number,
 	orderdate date;
 ); 
 
 -----
 insert into book values(1, '축구의 역사', '굿스포츠', 7000);
insert into book values(2, '축구아는 여자', '나무수', 13000);
insert into book values(3, '축구의 이해', '대한미디어', 22000);
insert into book values(4, '골프 바이블', '대한미디어', 35000);
insert into book values(5, '피겨 교본', '굿스포츠', 8000);
insert into book values(6, '역도 단계별기술', '굿스포츠', 6000);
insert into book values(7, '야구의 추억', '이상미디어', 20000);
insert into book values(8, '야구를 부탁해', '이상미디어', 14000);
insert into book values(9, '올림픽 이야기', '삼성당', 7500);
insert into book values(10, 'Olympic Champions', 'Pearson', 13000);
  
  
 //데이터를 추가, 수정, 삭제한 이후엔 반드시 commit
 
 insert into customer values(1,'박지성','영국 맨체스터','010-1111-1111');
 insert into customer values(2,'김연아','한국 서울','010-1111-1112');
 insert into customer values(3,'장미란','한국 강원도','010-1111-1113');
 insert into customer values(4,'추신수','미국 메츠','010-1111-1114');
 insert into customer values(5,'박세리','대한민국 대전',null);
 
 // orders 테이블에 자료 추가하기
	orderid  
 	custid  
 	bookid  
 	saleprice  
 	orderdate  
 
 //박지성이 축구의 역사를 2021.11.01에 6,000 
  insert into orders values( 1, 1, 1, 6000, '2021/11/01');
  insert into orders values( 2, 1, 3, 21000, '2021/11/03');
  insert into orders values( 3, 2, 5, 8000, '2021/11/01');
  insert into orders values( 4, 3, 6, 6000, '2021/11/01');
  insert into orders values( 5, 4, 7, 20000, '2021/11/04');
  insert into orders values( 6, 1, 2, 12000, '2021/11/05');
  insert into orders values( 7, 4, 8, 13000, '2021/11/07');
  insert into orders values( 8, 3, 10, 12000, '2021/11/07');
  insert into orders values( 9, 2, 10, 7000, '2021/11/09');
  insert into orders values( 10, 3, 8, 13000, '2021/11/08');
  
   
  데이터 명령어
  
  SQL - structured Query Language
  
  -DCL
  -DDL
  -DML 데이터 조작어
  insert 추가
  select 검색(조회)
  update 수정
  delete 삭제
  
  **데이터 조작어 -> 검색( select )
=-> 데이터를 조회하는 명령어를 특별히  Query라고 부름
  
  **select 명령어의 기본 구조  
  select 컬럼명1, 컬럼명2, ... from 테이블이름 [where 조건식]  //없을 수도 있는 것은 대괄호로 표시하기
  
    ** where 조건식에 사용되는 연산자들
  비교연산자 = < > <= >=  <> 같지 않다.
  범위연산자 between 값1 and 값2
  집합연산자 in(값1, 값2, 값3...), not in(값1, 값2, 값3...)
  문자열의 특정패턴: like 
  논리연산자 : and , or , not
  null인지 파악: is null, is not null  
   
   
  1) 모든 도서의 도서명, 가격을 검색하기
  select bookname, price from book;
  2)모든 도서의 도서번호, 도서번호, 츨핀시명, 가격을 검색
  select bookid, bookname,publisher, price from book;
  select * from book; (* 모든 것을 다 볼 때)
  select bookname, publisher,price, bookid from book;
  
  3)이상미디어인 모든 도서의 도서명, 가격을 검색함
  select bookname, price from book where publisher = '이상미디어';
  
  4)'김연아'고객의 주소와 전화번호를 검색
  select address, phone from customer where name= '김연아';
  
  5) 모든 출판사명을 출력하기
  select publisher from book;
  
  ** 중복을 제거하고, 한 번만 출력하고자 할 때 
   distinct  :  컬럼하나만 중복을 제거할 때만 사용이 가능함
     ->select distinct publisher from book;
  
  6) 가격이 20000만원 미만인 도서의 정보를 출력하기
  select * from book where price <20000; 
 
   
  7)가격이 10000원 이하인 도서의 이름, 가격, 출한사명
  select bookname, price, publisher from book where price<=10000;
  
  8)  가격이 100000원 이상, 2만원이하 도서 검색
  select * from book where price <=20000 and price>=10000;
  select * from book where price between 10000 and 20000;
  
  9) 출판사가 굿스포츠 or 대한미디어
  select * from book where publisher= '굿스포츠' or publisher='대한미디어';
  select * from book where publisher in('굿스포츠', '대한미디어');
  
  10) 출판사가 굿스포츠도 아니고, 대한미디어도 아닌 도서를 검색하기
  select * from book where publisher <> '굿스포츠' and publisher <> '대한미디어'
  select * from book where publisher != '굿스포츠' and publisher != '대한미디어'
  select * from book where publisher not in('굿스포츠', '대한미디어');
   
  11)이상미디어나 굿스포츠에서 출간한 도서중에 가격이 10000원이상인 도서의 도서명, 가격, 출판사명을 츨력하시오
  select * from book where price >= 10000 and  publisher in('이상미디어','굿스포츠');
  
  ** like 연산자
  문자열데이터에 있어서 어떠한 패턴을 따르는지 검사할 때 사용함
  ->김으로 시작하는 데이터를 검색, 도서명에 축구가 들어가는 데이터 검색
  
  -> like 연산자와 같이 사용되는 기호 
  % 모르는 아무글자를 대신 => 글자가 있어도 좋고, 없어도 좋고, 길자길이도 노상관
  _ 모르는 하나의 글자를 대신하는 기호=>반드시 하나의 글자가 있어야 함 
  
  
  select * from customer where name like '김%';
  =>'김연아'
  =>김숙
  =>김마리아
  
  select *from customer where name like'김_';
  =>김숙
     
  select *from customer where name like'김__';
  =>김연아
    
  select * from book where bookname like '축구%';
  =>축구로 시작하는 책만 찾아줌
  
   select * from book where bookname like '%축구';
  =>축구로 끝나는 책만 찾아줌
  
   select * from book where bookname like '%축구%';
  =>축구가 포함되기만 하면 됨
  
  
  
   insert into book values(11,'재미있는 축구','쌍용미디어',172000);
  	1)도서이름에 '구'글자가 포함되는 모든 도서의 이름과 가격을 출력하기
  	 select bookname, price from book where bookname like '%구%';
  
   	2)bookname의 두번째 글자에 구가 포함되는 모든 도서의 정보를 출력
  	  select * from book where bookname like'_구%';
  
	3) 축구관련 도서중 가격이 20000원 이상인 도서의 정보 출력
	  select * from book 
	  where bookname like '%축구%' and
	  price >= 20000;
	   
	4) 굿스포츠나 대한미디어중 축구관련 도서의정보 출력
	  select * from book 
	  where publisher  in('굿스포츠', '대한미디어') and 
	  bookname like'%축구%';
	  
	  
	  **순서대로 출력하기 
	  =>select명령어 끝에다가  order by 사용
	  => 1. 오름차순 정렬 order by 칼럼 [asc]
	   	 2. 내림차순 정렬 order by 칼럼 desc
	   	 3. order by  컬럼1[asc|desc], 컬럼2[asc|desc]
	  1)모든 도서의 정보를 출력하기 단 도서명순으로 
	  select * from book order by bookname;
	  
	  
	  insert into book values(12,'이기는 축구기술','굿스포츠', 20000);
	  1-1) '이상미디어'나 '대한미디어' 혹은 '굿스포츠'에서 출간한 도서중에 
	  축구관련 도서중에
	  가격이 6000~30000원 사이의 도서명, 출판사명, 가격을 출력
	  단, 출판사명으로 출력으로 출력, 동일시 가격이 높은 순  
	  
	  select * from book 
	  where publisher in('굿스포츠', '이상미디어','대한미디어') and
	  bookname like '%축구%' and
	  price >= 6000  and price <=30000
	  order by  publisher,price desc;
	  
	  2)이상미디어에서 출간하는 모든 도서의 목록 출력	 
  	select * from book where publisher ='이상미디어'order by price desc;
  	
  	3)사용자한테 출판사이름을 입력받아서, 그 출판사에서 출간하는 모든 도서정보를 출력 단 도서의 가격이 높은 순
  
  
  
  
  
  
  
  
  